<html>
<head>
	<title>Test of the hyObject(js) engine</title>
</head>

<script src="../test.js"></script>

<!-- Backend dependencies -->
<script type='text/javascript' charset='UTF-8' src='../../src/engine/definition.js'></script>
<script type='text/javascript' charset='UTF-8' src='../../src/engine/object.js'></script>
<script type='text/javascript' charset='UTF-8' src='../../src/engine/dispatcher.js'></script>
<script type='text/javascript' charset='UTF-8' src='../../src/engine/relation.js'></script>

<script type='text/javascript' charset='UTF-8' src='../../src/packages/viewHelper.js'></script>
<script type='text/javascript' charset='UTF-8' src='../../src/packages/htmlView/htmlViewHelper.js'></script>

<!-- Files to test -->
<script type='text/javascript' charset='UTF-8' src='../../src/packages/htmlView/article.js'></script>
<script type='text/javascript' charset='UTF-8' src='../../src/packages/htmlView/author.js'></script>
<script type='text/javascript' charset='UTF-8' src='../../src/packages/htmlView/basic.js'></script>
<script type='text/javascript' charset='UTF-8' src='../../src/packages/htmlView/lines.js'></script>
<script type='text/javascript' charset='UTF-8' src='../../src/packages/htmlView/page.js'></script>
<script type='text/javascript' charset='UTF-8' src='../../src/packages/htmlView/paragraph.js'></script>
<script type='text/javascript' charset='UTF-8' src='../../src/packages/htmlView/table.js'></script>
<script type='text/javascript' charset='UTF-8' src='../../src/packages/htmlView/tree.js'></script>

<!-- Add your test files here -->
<script src="./article.js"></script>
<script src="./author.js"></script>
<script src="./basic.js"></script>
<script src="./lines.js"></script>
<script src="./page.js"></script>
<script src="./paragraph.js"></script>
<script src="./table.js"></script>
<script src="./tree.js"></script>

<script>

	function callView( object ) 
	{
		return "|View; <(html)>; html < text; {recursive_context, keep_method_conditions, set_uuid_attribute}"._send(object);
	}

	function testView( object, type, expected )
	{
		var j_object = object._as(type);
		var output = callView(j_object);
		
		expected = expected.replace("\$UUID", j_object.__uuid);
		
		if (expected != output.valueOf()) {
			console.group("Not equal");
				console.log(expected);
				console.log(output.valueOf());
				console.log(object);
			console.groupEnd();
		}
			
		return expected == output;
	}

	function testRecursiveView( object, type, expected )
	{
		//
		// Only for test of receival of recursive context
		//		 
		({
			purpose:	"View",
			conditions:	"{?recursive_context, ?keep_method_conditions, ?set_uuid_attribute}",

			input:		">(recursion_test)<; recursion_test < text",
			output:		"<(~html)>; ?html < text",
			context:	"~recursion_test << "+type
		})._(

			function (input, def) 
			{
				return HtmlView_autotag("span", arguments, input._get("text").html_text(), "recursion_test='true'");
			}

		);
		
		return testView( object, type, expected );		
	}

	// Add your test suites here:
	doTest( {
				"Article Views":		articleViewTest,				
				"Author Views":			authorViewTest,
				"Basic Views":			basicViewTest,

			 }
		   );

</script>

</html>

